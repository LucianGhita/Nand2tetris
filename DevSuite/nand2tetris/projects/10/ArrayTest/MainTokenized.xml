<class>
	<keyword> class </keyword>
	<identifier> Main </identifier>
	<symbol> { </symbol>
		<keyword> function </keyword>
		<keyword> void </keyword>
		<identifier> main </identifier>
		<symbol> ( </symbol>
		<symbol> ) </symbol>
		<symbol> { </symbol>
		<symbol> ; </symbol>
		<keyword> int </keyword>
		<identifier> length </identifier>
		<keyword> var </keyword>
		<keyword> int </keyword>
		<identifier> i </identifier>
		<symbol> ; </symbol>
		<identifier> length </identifier>
		<identifier> Keyboard </identifier>
		<identifier> readInt </identifier>
		<identifier> MANY </identifier>
		<symbol> ) </symbol>
		<keyword> let </keyword>
		<identifier> a </identifier>
		<identifier> Array </identifier>
		<identifier> new </identifier>
		<identifier> length </identifier>
		<symbol> ; </symbol>
		<identifier> i </identifier>
		<int_const> 0 </int_const>
		<keyword> while </keyword>
		<symbol> &lt; </symbol>
		<identifier> length </identifier>
		<symbol> { </symbol>
		<identifier> a </identifier>
		<identifier> i </identifier>
		<symbol> = </symbol>
		<identifier> Keyboard </identifier>
		<identifier> readInt </identifier>
		<identifier> THE </identifier>
		<identifier> NEXT </identifier>
		<symbol> ) </symbol>
		<keyword> let </keyword>
		<identifier> i </identifier>
		<identifier> i </identifier>
		<int_const> 1 </int_const>
		<symbol> } </symbol>
		<identifier> i </identifier>
		<int_const> 0 </int_const>
		<keyword> let </keyword>
		<identifier> sum </identifier>
		<int_const> 0 </int_const>
		<keyword> while </keyword>
		<symbol> &lt; </symbol>
		<identifier> length </identifier>
		<symbol> { </symbol>
		<identifier> sum </identifier>
		<identifier> sum </identifier>
		<identifier> a </identifier>
		<identifier> i </identifier>
		<symbol> ; </symbol>
		<identifier> i </identifier>
		<identifier> i </identifier>
		<int_const> 1 </int_const>
		<symbol> } </symbol>
		<identifier> Output </identifier>
		<identifier> printString </identifier>
		<identifier> AVERAGE </identifier>
		<symbol> ) </symbol>
		<keyword> do </keyword>
		<identifier> Output </identifier>
		<identifier> printInt </identifier>
		<symbol> / </symbol>
		<identifier> length </identifier>
		<symbol> ; </symbol>
		<identifier> Output </identifier>
		<identifier> println </identifier>
		<symbol> ) </symbol>
		<keyword> return </keyword>
		<symbol> } </symbol>
