<tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>Array</identifier>
	 <identifier>a</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>length</identifier>
	 <symbol>;</symbol>
	 <keyword>var</keyword>
	 <keyword>int</keyword>
	 <identifier>i</identifier>
	 <symbol>,</symbol>
	 <identifier>sum</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>length</identifier>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>MANY</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>=</symbol>
	 <identifier>Array</identifier>
	 <symbol>.</symbol>
	 <identifier>new</identifier>
	 <symbol>(</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>=</symbol>
	 <identifier>Keyboard</identifier>
	 <symbol>.</symbol>
	 <identifier>readInt</identifier>
	 <symbol>(</symbol>
	 <identifier>THE</identifier>
	 <identifier>NEXT</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <int_const>0</int_const>
	 <symbol>;</symbol>
	 <keyword>while</keyword>
	 <symbol>(</symbol>
	 <symbol>&lt;</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>let</keyword>
	 <identifier>sum</identifier>
	 <symbol>=</symbol>
	 <identifier>sum</identifier>
	 <symbol>+</symbol>
	 <identifier>a</identifier>
	 <symbol>[</symbol>
	 <identifier>i</identifier>
	 <symbol>]</symbol>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>i</identifier>
	 <symbol>=</symbol>
	 <identifier>i</identifier>
	 <symbol>+</symbol>
	 <int_const>1</int_const>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printString</identifier>
	 <symbol>(</symbol>
	 <identifier>AVERAGE</identifier>
	 <string_const>"</string_const>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>printInt</identifier>
	 <symbol>(</symbol>
	 <symbol>/</symbol>
	 <identifier>length</identifier>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>Output</identifier>
	 <symbol>.</symbol>
	 <identifier>println</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>static</keyword>
	 <keyword>boolean</keyword>
	 <identifier>test</identifier>
	 <symbol>;</symbol>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>Added</identifier>
	 <identifier>for</identifier>
	 <identifier>testing</identifier>
	 <symbol>-</symbol>
	 <symbol>-</symbol>
	 <identifier>there</identifier>
	 <identifier>is</identifier>
	 <identifier>no</identifier>
	 <keyword>static</keyword>
	 <identifier>keyword</identifier>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>in</identifier>
	 <identifier>the</identifier>
	 <identifier>Square</identifier>
	 <identifier>files</identifier>
	 <symbol>.</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>SquareGame</identifier>
	 <identifier>game</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>game</identifier>
	 <symbol>=</symbol>
	 <identifier>game</identifier>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>game</identifier>
	 <symbol>.</symbol>
	 <identifier>run</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>game</identifier>
	 <symbol>.</symbol>
	 <identifier>dispose</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>more</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>Added</identifier>
	 <identifier>to</identifier>
	 <identifier>test</identifier>
	 <identifier>Jack</identifier>
	 <identifier>syntax</identifier>
	 <identifier>that</identifier>
	 <identifier>is</identifier>
	 <identifier>not</identifier>
	 <identifier>used</identifier>
	 <identifier>in</identifier>
	 <keyword>var</keyword>
	 <keyword>boolean</keyword>
	 <identifier>b</identifier>
	 <symbol>;</symbol>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>the</identifier>
	 <identifier>Square</identifier>
	 <identifier>files</identifier>
	 <symbol>.</symbol>
	 <keyword>if</keyword>
	 <symbol>(</symbol>
	 <identifier>b</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <symbol>}</symbol>
	 <keyword>else</keyword>
	 <symbol>{</symbol>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>There</identifier>
	 <identifier>is</identifier>
	 <identifier>no</identifier>
	 <keyword>else</keyword>
	 <identifier>keyword</identifier>
	 <identifier>in</identifier>
	 <identifier>the</identifier>
	 <identifier>Square</identifier>
	 <identifier>files</identifier>
	 <symbol>.</symbol>
	 <symbol>}</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>static</keyword>
	 <keyword>boolean</keyword>
	 <identifier>test</identifier>
	 <symbol>;</symbol>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>Added</identifier>
	 <identifier>for</identifier>
	 <identifier>testing</identifier>
	 <symbol>-</symbol>
	 <symbol>-</symbol>
	 <identifier>there</identifier>
	 <identifier>is</identifier>
	 <identifier>no</identifier>
	 <keyword>static</keyword>
	 <identifier>keyword</identifier>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>in</identifier>
	 <identifier>the</identifier>
	 <identifier>Square</identifier>
	 <identifier>files</identifier>
	 <symbol>.</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>SquareGame</identifier>
	 <identifier>game</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>game</identifier>
	 <symbol>=</symbol>
	 <identifier>game</identifier>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>game</identifier>
	 <symbol>.</symbol>
	 <identifier>run</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>game</identifier>
	 <symbol>.</symbol>
	 <identifier>dispose</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>more</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>Added</identifier>
	 <identifier>to</identifier>
	 <identifier>test</identifier>
	 <identifier>Jack</identifier>
	 <identifier>syntax</identifier>
	 <identifier>that</identifier>
	 <identifier>is</identifier>
	 <identifier>not</identifier>
	 <identifier>used</identifier>
	 <identifier>in</identifier>
	 <keyword>var</keyword>
	 <keyword>boolean</keyword>
	 <identifier>b</identifier>
	 <symbol>;</symbol>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>the</identifier>
	 <identifier>Square</identifier>
	 <identifier>files</identifier>
	 <symbol>.</symbol>
	 <keyword>if</keyword>
	 <symbol>(</symbol>
	 <identifier>b</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <symbol>}</symbol>
	 <keyword>else</keyword>
	 <symbol>{</symbol>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>There</identifier>
	 <identifier>is</identifier>
	 <identifier>no</identifier>
	 <keyword>else</keyword>
	 <identifier>keyword</identifier>
	 <identifier>in</identifier>
	 <identifier>the</identifier>
	 <identifier>Square</identifier>
	 <identifier>files</identifier>
	 <symbol>.</symbol>
	 <symbol>}</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>static</keyword>
	 <keyword>boolean</keyword>
	 <identifier>test</identifier>
	 <symbol>;</symbol>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>Added</identifier>
	 <identifier>for</identifier>
	 <identifier>testing</identifier>
	 <symbol>-</symbol>
	 <symbol>-</symbol>
	 <identifier>there</identifier>
	 <identifier>is</identifier>
	 <identifier>no</identifier>
	 <keyword>static</keyword>
	 <identifier>keyword</identifier>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>in</identifier>
	 <identifier>the</identifier>
	 <identifier>Square</identifier>
	 <identifier>files</identifier>
	 <symbol>.</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>SquareGame</identifier>
	 <identifier>game</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>game</identifier>
	 <symbol>=</symbol>
	 <identifier>game</identifier>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>game</identifier>
	 <symbol>.</symbol>
	 <identifier>run</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>game</identifier>
	 <symbol>.</symbol>
	 <identifier>dispose</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>more</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>Added</identifier>
	 <identifier>to</identifier>
	 <identifier>test</identifier>
	 <identifier>Jack</identifier>
	 <identifier>syntax</identifier>
	 <identifier>that</identifier>
	 <identifier>is</identifier>
	 <identifier>not</identifier>
	 <identifier>used</identifier>
	 <identifier>in</identifier>
	 <keyword>var</keyword>
	 <keyword>boolean</keyword>
	 <identifier>b</identifier>
	 <symbol>;</symbol>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>the</identifier>
	 <identifier>Square</identifier>
	 <identifier>files</identifier>
	 <symbol>.</symbol>
	 <keyword>if</keyword>
	 <symbol>(</symbol>
	 <identifier>b</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <symbol>}</symbol>
	 <keyword>else</keyword>
	 <symbol>{</symbol>
	 <symbol>/</symbol>
	 <symbol>/</symbol>
	 <identifier>There</identifier>
	 <identifier>is</identifier>
	 <identifier>no</identifier>
	 <keyword>else</keyword>
	 <identifier>keyword</identifier>
	 <identifier>in</identifier>
	 <identifier>the</identifier>
	 <identifier>Square</identifier>
	 <identifier>files</identifier>
	 <symbol>.</symbol>
	 <symbol>}</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens><tokens>
	 <keyword>class</keyword>
	 <identifier>Main</identifier>
	 <symbol>{</symbol>
	 <keyword>static</keyword>
	 <keyword>boolean</keyword>
	 <identifier>test</identifier>
	 <symbol>;</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>main</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <identifier>SquareGame</identifier>
	 <identifier>game</identifier>
	 <symbol>;</symbol>
	 <keyword>let</keyword>
	 <identifier>game</identifier>
	 <symbol>=</symbol>
	 <identifier>game</identifier>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>game</identifier>
	 <symbol>.</symbol>
	 <identifier>run</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>do</keyword>
	 <identifier>game</identifier>
	 <symbol>.</symbol>
	 <identifier>dispose</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>;</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <keyword>function</keyword>
	 <keyword>void</keyword>
	 <identifier>more</identifier>
	 <symbol>(</symbol>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <keyword>var</keyword>
	 <keyword>boolean</keyword>
	 <identifier>b</identifier>
	 <symbol>;</symbol>
	 <keyword>if</keyword>
	 <symbol>(</symbol>
	 <identifier>b</identifier>
	 <symbol>)</symbol>
	 <symbol>{</symbol>
	 <symbol>}</symbol>
	 <keyword>else</keyword>
	 <symbol>{</symbol>
	 <symbol>}</symbol>
	 <keyword>return</keyword>
	 <symbol>;</symbol>
	 <symbol>}</symbol>
	 <symbol>}</symbol>
</tokens>